@charset "UTF-8";

// ----------------------
// == Site settings
// ----------------------

// Routes
$imgR: '../img/';
$fontR: '../fonts/';

// Fonts
@include font-face("thin", "#{$fontR}helvetica/HelveticaNeue-Thin", $file-formats: woff);
@include font-face("light", "#{$fontR}helvetica/HelveticaNeueLight", $file-formats: woff);
@include font-face("medium", "#{$fontR}helvetica/HelveticaNeueMedium", $file-formats: woff);
@include font-face("bold", "#{$fontR}helvetica/HelveticaNeueBold", $file-formats: woff);
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap');

@include font-face("sofiaRegular", "#{$fontR}Sofia-Pro-Regular-Az", $file-formats: woff);
$sofiaRegular: 'sofiaRegular', Helvetica, Arial, sans-serif;

@include font-face("sofiaBold", "#{$fontR}Sofia-Pro-Semi-Bold-Az", $file-formats: woff);
$sofiaBold: 'sofiaBold', Helvetica, Arial, sans-serif;




$hthin: 'thin', sans-serif;
$hlight: 'light', sans-serif;
$hmedium: 'medium', sans-serif;
$hbold: 'bold', sans-serif;
$roboto: 'Roboto', sans-serif;

// = Colors
// -----------------------------

// Graphic chart
$gray-1: #333333;
$gray-2: #191919;
$gray-3: #0e0e0e;
$gray-4: #363636;
$gray-5: #959595;
$gray-6: #ececec;
$gray-7: #787878;
$gray-8: #cdcdcd;
$gray-9: #282e47; 
$gray-10: #f7f8fb;
$gray-11: #cccccc;
$gray-12: #f2f2f2;
$col:#045C7E;
$col1: #0E2D3B;
$aqua: #00DCDA;
$purple: #5A58C4;
$letterColor: #2E3649;
$bgsSection: #2E3649;
$bgsinputs: #F1F1F1;
$input-bg: #F1F1F1;
$bgsSubmit: #5A58C4;
$colorFooter: #2E3649;
$azulitoBajito: #33B8F5;


$col2: #2E3649;
$col3: #150519;
$col4: #f3e4f7;
$col5: #f36d21;
$col6: #d65b1d;
$col7: #76777a;
$col8: #afafb1;
$col9: #7e8080;
$col10: #d5427f;
$col11: #333333;
$col12: #1a1a1a;
$col13: #5ca2cb;
$col14: #54a94b;
$white: #ffffff;
$black: #000000;
$facebook: #1877f2;
$twitter: #43bfe1;
$google: #D64131;

$c1: $gray-1;
$c2: $gray-2;
$c3: $gray-3;
$c4: $gray-4;
$c5: $gray-5;
$c6: $gray-6;
$c7: $gray-7;
$c8: $gray-8;
$c9: $gray-9;
$c10: $gray-10;
$c11: $gray-11;
$c12: $gray-12;

// Display Flex
@mixin displayFlex($disp, $direc, $justify, $items, $wrp) {
  @include display($disp); @include flex-direction($direc); @include justify-content($justify); @include align-items($items); @include flex-wrap($wrp);
}

// Extend Clases
.overlayClass {
  width: 100%; height: 100%; @include position(fixed, 0 null null 0); margin: 0; padding: 0;
}
.overlayClassAbs {
  width: 100%; height: 100%; @include position(absolute, 0 null null 0); margin: 0; padding: 0;
}
.absImg {
  @include position(absolute, 50% null null 50%); @include transform(translate(-50%, -50%));
}

// Font Responsive Mixin
@mixin fluid-type($min-font-size: 12px, $max-font-size: 21px, $lower-range: 420px, $upper-range: 900px) {
  font-size: calc(#{$min-font-size} + #{(($max-font-size / ($max-font-size * 0 + 1)) - ($min-font-size / ($min-font-size * 0 + 1)))} * ( (100vw - #{$lower-range}) / #{(($upper-range / ($upper-range * 0 + 1)) - ($lower-range / ($lower-range * 0 + 1)))}));
  @media screen and (max-width: $lower-range) {
    font-size: $min-font-size;
  }
  @media screen and (min-width: $upper-range){
    font-size: $max-font-size;
  }
}

// Mixin Keyframes Button
@include keyframes(button) {
  0% {
    opacity: 0;
    @include transform(translate(-50px, 0px) skewX(-50deg)); width: 10%;
  }
  50% {
    opacity: 1;
    @include transform(translate(0, 0px) skewX(-50deg)); width: 100%;
  }
  100% {
    opacity: 0;
    @include transform(translate(300%, 0px) skewX(-50deg)); width: 50%;
  }
}

@include keyframes(fadeInUpSD) {
  0% {
    opacity: 0; @include transform(translate(-50%, 100px));
  }

  100% {
    opacity: 1; @include transform(translate(-50%, -50%));
  }
}
@include keyframes(sdb10) {
  0% {
    @include transform(translate(0, 0));
    opacity: 0;
  }
  40% {
    opacity: 1;
  }
  80% {
    @include transform(translate(0, 20px));
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search); 
    @if $index { @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace); }
    @return $string; 
}

@function svg-url($svg) {

	$svg: str-replace($svg, '"', '\'');
	$svg: str-replace($svg, '%', '%25');
	$svg: str-replace($svg, '<', '%3C');
	$svg: str-replace($svg, '>', '%3E');
	$svg: str-replace($svg, '&', '%26');
	$svg: str-replace($svg, '#', '%23');
	$svg: str-replace($svg, '{', '%7B');
	$svg: str-replace($svg, '}', '%7D');
	$svg: str-replace($svg, ';', '%3B');

	@return url("data:image/svg+xml;charset=utf8,#{$svg}");

}